# Copyright (c) 2021-2022, [Ribose Inc](https://www.ribose.com).
# All rights reserved.
# This file is a part of tamatebako
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# The purpose of this workflow is to check that build procedures work correctly
# in specific environment. Due to this reason there is no caching. It is done by
# intention. All caching is in upstream projects.
#
# Also this file contains comments that will be useful is dwarfs has to be build
# in different environment, not GHA.
name: MacOS

on:
  push:
    branches: [ libdwarfs_wr* ]
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'
      - '.github/workflows/*.yml'
      - '!.github/workflows/macos.yml'
  pull_request:
    branches: [ libdwarfs_wr* ]
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'
      - '.github/workflows/*.yml'
      - '!.github/workflows/macos.yml'
  workflow_dispatch:

env:
  MAKEFLAGS: -j4
  CC: clang
  CXX: clang++
  CXXFLAGS: -std=gnu++14 -DTARGET_OS_SIMULATOR=0 -DTARGET_OS_IPHONE=0

jobs:
  build:
env:
  MAKEFLAGS: -j4
  CC: clang
  CXX: clang++
  CXXFLAGS: -std=gnu++14 -DTARGET_OS_SIMULATOR=0 -DTARGET_OS_IPHONE=0

jobs:
  build:
    name: ${{ matrix.setup.os }} [${{ matrix.scope }}]
    runs-on: ${{ matrix.setup.os }}
    strategy:
      fail-fast: false
      matrix:          
        setup:
          - os: macos-10.15
            xcode: '12.1.1'
          - os: macos-11.0
            xcode: '12.4'
        scope: [ ALL, MKD, LIB ]

    steps:

      - name: Select XCode and SDK
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ matrix.setup.xcode }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install packages
# Already installed: pkg-config, openssl@1.1, libevent, libsodium, lz4, xz
# Not installing [if ubuntu is considered the baseline] libiberty, libunwind, libdwarf, libelf
        run: |
          brew install \
          bison flex binutils libarchive double-conversion boost jemalloc fmt \
          glog

      - name: Configure with tests
        if: ${{ matrix.setup.scope == 'ALL' }}
        run: |
          mkdir build
          cd build
          cmake .. -DWITH_TESTS=1 -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install

      - name: Configure without tests
        if: ${{ matrix.setup.scope != 'ALL' }}
        run: |
          mkdir build
          cd build
          cmake .. -DTEBAKO_BUILD_SCOPE=${{ matrix.scope }} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install

      - name: Build
        run: |
          cd build
          make -j4

      - name: Test
        if: ${{ matrix.setup.scope == 'ALL' }}
        run: |
          cd build
          make test
