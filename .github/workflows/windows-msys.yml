# Copyright (c) 2022, [Ribose Inc](https://www.ribose.com).
# All rights reserved.
# This file is a part of tamatebako
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# The purpose of this workflow is to check that build procedures work correctly
# in specific environment. Due to this reason there is no caching. It is done by
# intention. All caching is in upstream projects.
#
# Also this file contains comments that will be useful is dwarfs has to be build
# in different environment, not GHA.
name: Windows-MSys

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'
      - '.github/workflows/*.yml'
      - '!.github/workflows/windows-msys.yml'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'
      - '.github/workflows/*.yml'
      - '!.github/workflows/windows-msys.yml'
  workflow_dispatch:

env:
  BUILD_TYPE: Release

jobs:
 # https://wildwolf.name/github-actions-how-to-avoid-running-the-same-workflow-multiple-times/
  prepare:
    runs-on: ubuntu-latest
    outputs:
      head_tag: ${{ steps.check.outputs.head_tag }}
      foreign_pr: ${{ steps.check.outputs.foreign_pr }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Retrieve tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/* || true
      - name: Set output variables
        id: check
        run: |
          fpr="no"
          tag=""
          if [[ "${{ github.ref }}" == refs/heads/* ]]; then
            tag="$(git tag --points-at HEAD)"
          elif [[ "${{ github.ref }}" == refs/pull/* ]] && [ "${{ github.event.pull_request.head.repo.full_name }}" != "${{ github.event.pull_request.base.repo.full_name }}" ]; then
            fpr="yes"
          fi
          echo "::set-output name=foreign_pr::${fpr}"
          echo "::set-output name=head_tag::${tag}"

  build:
    name: windows-msys [${{ matrix.env.CC }}, ${{ matrix.setup.scope }}]
    needs: prepare
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
#  We are running two configurations:
#   - ALL in order to run regression tests
#   - MKD just to be sure that configuration needed for teabako builds without issues
        setup:
          - scope: 'ALL'
            tests: 'ON'
          - scope: 'MKD'
            tests: 'OFF'
        env:
          - sys: mingw64
            CC: gcc
            CXX: g++
#          - CC: clang
#            CXX: clang++
    env: ${{ matrix.env }}

    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Setup MSys
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.env.sys}}
          path-type: minimal
          update: true
          install: >-
            git
            tar
            bison
            flex
          pacboy: >-
            toolchain:p
            openssl:p
            cmake:p
            boost:p
            make:p
            diffutils:p
            libevent:p
            double-conversion:p
            glog:p
            fmt:p
            dlfcn:p
            gtest:p

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Configure
        run: |
          mkdir build
          cd build
          cmake .. -DWITH_TESTS=${{ matrix.setup.tests }} -DUSE_JEMALLOC=OFF -DPREFER_SYSTEM_GTEST=ON -DTEBAKO_BUILD_SCOPE=${{ matrix.setup.scope }} -DCMAKE_INSTALL_PREFIX=install

      - name: Build
        run: |
          cd build
          cmake --build .

      - name: Test
        if: ${{ matrix.setup.tests == 'ON' }}
        run: |
          cd build
          ninja test
